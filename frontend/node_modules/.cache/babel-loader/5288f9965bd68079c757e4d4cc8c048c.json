{"ast":null,"code":"import _classCallCheck from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import AuthenticationService from'./AuthenticationService.js';import RecipeDataService from'../../api/recipes/RecipeDataService.js';import{Card,ListGroup,CardColumns,ButtonGroup,ToggleButton,Badge}from'react-bootstrap';import{Link}from'react-router-dom';import logo from\"../../images/logo2.png\";var Recipe=function Recipe(props){return React.createElement(Link,{to:'/view/'+props.recipe.id,className:\"link\"},React.createElement(Card,{className:\"shadow grow\",bg:\"light\",style:{marginTop:10}},React.createElement(Card.Img,{variant:\"top\",src:props.recipe.image}),React.createElement(Card.Header,{className:\"h5\"},props.recipe.title,\" \",React.createElement(Badge,{variant:\"secondary\"},props.recipe.mealType)),React.createElement(ListGroup,{variant:\"flush\"})));};var SearchComponent=/*#__PURE__*/function(_Component){_inherits(SearchComponent,_Component);function SearchComponent(props){var _this;_classCallCheck(this,SearchComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(SearchComponent).call(this,props));_this.state={recipes:[],filterByField:\"all\",filterByTerm:''};_this.refreshRecipes=_this.refreshRecipes.bind(_assertThisInitialized(_this));_this.handleFilter=_this.handleFilter.bind(_assertThisInitialized(_this));_this.handleTerm=_this.handleTerm.bind(_assertThisInitialized(_this));return _this;}_createClass(SearchComponent,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(\"component did Mount\");this.refreshRecipes();}},{key:\"refreshRecipes\",value:function refreshRecipes(){var _this2=this;var username=AuthenticationService.getLoggedInUser();RecipeDataService.retrieveAllRecipes(username).then(function(response){_this2.setState({recipes:response.data});});}//looks at the state's filterByTerm and filterByField\n//returns a list of recipes based on params\n},{key:\"recipeList\",value:function recipeList(){var filterBy=this.state.filterByField;var searchterm=this.state.filterByTerm.replace(/^\\s+|\\s+$/g,'');return this.state.recipes.map(function(currentRecipe,i){if(filterBy==='all'&&(currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase())||currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase())||currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase())||currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase()))||filterBy==='title'&&currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase())||filterBy==='ingredients'&&currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase())||filterBy==='tags'&&currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase())||filterBy==='mealType'&&currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase()))return React.createElement(Recipe,{recipe:currentRecipe,key:i});});}//Handles any changes to the search category\n},{key:\"handleFilter\",value:function handleFilter(e){this.setState({filterByTerm:'',filterByField:e.target.value});}//Handles any changes to search term\n},{key:\"handleTerm\",value:function handleTerm(e){this.setState({filterByTerm:e.target.value});}},{key:\"render\",value:function render(){//searchbar variable\nvar searchBar;//if the search field is filtering by recipe mealType, it will set searchBar to a group of radio buttons\nif(this.state.filterByField==='mealType'){searchBar=React.createElement(\"div\",{className:\"form-group row\"},React.createElement(ButtonGroup,{toggle:true,className:\"mt-1 ml-3\"},React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"entree\",checked:this.state.filterByTerm===\"entree\",onChange:this.handleTerm,variant:\"dark\"},\"Entrees\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"dessert\",checked:this.state.filterByTerm===\"dessert\",onChange:this.handleTerm,variant:\"dark\"},\"Desserts\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"snack\",checked:this.state.filterByTerm===\"snack\",onChange:this.handleTerm,variant:\"dark\"},\"Snacks\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"drink\",checked:this.state.filterByTerm===\"drink\",onChange:this.handleTerm,variant:\"dark\"},\"Drinks\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"side\",checked:this.state.filterByTerm===\"side\",onChange:this.handleTerm,variant:\"dark\"},\"Sides\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",value:\"app\",checked:this.state.filterByTerm===\"app\",onChange:this.handleTerm,variant:\"dark\"},\"Appetizers\")));//if search Field is set to anything other than mealType, it sets searchBar to a text input that will live update due to how the onChange attribute works\n}else{searchBar=React.createElement(\"div\",{className:\"form-group row\"},React.createElement(\"div\",{className:\"col-xs-4\"},React.createElement(\"input\",{placeholder:\"SearchTerm\",value:this.state.filterByTerm,className:\"inputmargin form-control\",type:\"text\",onChange:this.handleTerm})));}return React.createElement(\"div\",{className:\"container pt-4\",role:\"main\"},React.createElement(\"br\",null),React.createElement(\"img\",{src:logo,width:\"200\",alt:\"github.com/klayne1129\"}),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"div\",{className:\"container \"},React.createElement(\"h5\",null,\"Search by:\"),React.createElement(ButtonGroup,{toggle:true,className:\"\"},React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",defaultChecked:true,value:\"all\",checked:this.state.filterByField===\"all\",onChange:this.handleFilter,variant:\"dark\"},\"All\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",defaultChecked:true,value:\"title\",checked:this.state.filterByField===\"title\",onChange:this.handleFilter,variant:\"dark\"},\"Name\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",defaultChecked:true,value:\"ingredients\",checked:this.state.filterByField===\"ingredients\",onChange:this.handleFilter,variant:\"dark\"},\"Ingredients\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",defaultChecked:true,value:\"mealType\",checked:this.state.filterByField===\"mealType\",onChange:this.handleFilter,variant:\"dark\"},\"Meal Type\"),React.createElement(ToggleButton,{type:\"radio\",name:\"radio\",defaultChecked:true,value:\"tags\",checked:this.state.filterByField===\"tags\",onChange:this.handleFilter,variant:\"dark\"},\"Tags\")),searchBar),React.createElement(CardColumns,null,this.recipeList()));}}]);return SearchComponent;}(Component);export default SearchComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basilClone/basil-app/frontend/src/components/recipes/SearchComponent.jsx"],"names":["React","Component","AuthenticationService","RecipeDataService","Card","ListGroup","CardColumns","ButtonGroup","ToggleButton","Badge","Link","logo","Recipe","props","recipe","id","marginTop","image","title","mealType","SearchComponent","state","recipes","filterByField","filterByTerm","refreshRecipes","bind","handleFilter","handleTerm","console","log","username","getLoggedInUser","retrieveAllRecipes","then","response","setState","data","filterBy","searchterm","replace","map","currentRecipe","i","toLowerCase","includes","ingredients","tags","e","target","value","searchBar","recipeList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js'\nimport { Card, ListGroup, CardColumns, ButtonGroup, ToggleButton, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport logo from \"../../images/logo2.png\"\n\n\nconst Recipe = props => (\n\n    <Link to={'/view/' + props.recipe.id} className=\"link\">\n        <Card className=\"shadow grow\" bg='light' style={{ marginTop: 10 }} >\n\n\n            <Card.Img variant='top' src={props.recipe.image}></Card.Img>\n\n            <Card.Header className='h5'>{props.recipe.title} <Badge variant='secondary'>{props.recipe.mealType}</Badge></Card.Header>\n            <ListGroup variant=\"flush\" >\n            </ListGroup>\n        </Card>\n    </Link>\n\n\n)\n\nclass SearchComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            recipes: [],\n            filterByField: \"all\",\n            filterByTerm: ''\n        }\n        this.refreshRecipes = this.refreshRecipes.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleTerm = this.handleTerm.bind(this);\n    }\n\n    componentDidMount() {\n\n        console.log(\"component did Mount\")\n        this.refreshRecipes();\n    }\n\n    refreshRecipes() {\n        let username = AuthenticationService.getLoggedInUser()\n        RecipeDataService.retrieveAllRecipes(username)\n            .then(\n                response => {\n                    this.setState({ recipes: response.data })\n                }\n            )\n    }\n\n    //looks at the state's filterByTerm and filterByField\n    //returns a list of recipes based on params\n\n    recipeList() {\n        let filterBy = this.state.filterByField\n        let searchterm = this.state.filterByTerm.replace(/^\\s+|\\s+$/g, '')\n        return this.state.recipes.map(function (currentRecipe, i) {\n\n\n            if ((filterBy === 'all' && (currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase())\n                || currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())))\n                || (filterBy === 'title' && currentRecipe.title.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'ingredients' && currentRecipe.ingredients.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'tags' && currentRecipe.tags.toLowerCase().includes(searchterm.toLowerCase()))\n                || (filterBy === 'mealType' && currentRecipe.mealType.toLowerCase().includes(searchterm.toLowerCase())))\n                return <Recipe recipe={currentRecipe} key={i} />\n        });\n    }\n    //Handles any changes to the search category\n    handleFilter(e) {\n        this.setState({\n            filterByTerm: '',\n            filterByField: e.target.value\n        })\n    }\n    //Handles any changes to search term\n    handleTerm(e) {\n        this.setState({\n            filterByTerm: e.target.value\n        })\n    }\n\n    render() {\n        //searchbar variable\n        let searchBar;\n\n        //if the search field is filtering by recipe mealType, it will set searchBar to a group of radio buttons\n        if (this.state.filterByField === 'mealType') {\n            searchBar =\n                <div className='form-group row'><ButtonGroup toggle className=\"mt-1 ml-3\" >\n\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"entree\"\n                        checked={this.state.filterByTerm === \"entree\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Entrees\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"dessert\"\n                        checked={this.state.filterByTerm === \"dessert\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Desserts\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"snack\"\n                        checked={this.state.filterByTerm === \"snack\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Snacks\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"drink\"\n                        checked={this.state.filterByTerm === \"drink\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Drinks\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"side\"\n                        checked={this.state.filterByTerm === \"side\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Sides\n                    </ToggleButton>\n                    <ToggleButton type=\"radio\"\n                        name=\"radio\"\n                        value=\"app\"\n                        checked={this.state.filterByTerm === \"app\"}\n                        onChange={this.handleTerm}\n                        variant='dark'>\n                        Appetizers\n                    </ToggleButton>\n\n\n                </ButtonGroup></div>\n\n            //if search Field is set to anything other than mealType, it sets searchBar to a text input that will live update due to how the onChange attribute works\n        } else {\n            searchBar =\n                <div className='form-group row'>\n                    <div className='col-xs-4'>\n                        <input placeholder='SearchTerm'\n                            value={this.state.filterByTerm}\n                            className='inputmargin form-control'\n                            type='text'\n                            onChange={this.handleTerm}>\n                        </input>\n                    </div>\n                </div>\n        }\n\n        return (\n\n            <div className='container pt-4' role='main'>\n                <br></br>\n                {/* <h3 className='mt-3 ml-2 display-3'>Basil</h3> */}\n                <img src={logo} width=\"200\" alt=\"github.com/klayne1129\" />\n                <br></br>\n                <br></br>\n                <div className='container '>\n                    <h5>Search by:</h5>\n                    <ButtonGroup toggle className=\"\" >\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"all\"\n                            checked={this.state.filterByField === \"all\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n\n                            All\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"title\"\n                            checked={this.state.filterByField === \"title\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Name\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"ingredients\"\n                            checked={this.state.filterByField === \"ingredients\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Ingredients\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"mealType\"\n                            checked={this.state.filterByField === \"mealType\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Meal Type\n                        </ToggleButton>\n                        <ToggleButton type=\"radio\"\n                            name=\"radio\"\n                            defaultChecked\n                            value=\"tags\"\n                            checked={this.state.filterByField === \"tags\"}\n                            onChange={this.handleFilter}\n                            variant='dark'>\n                            Tags\n                        </ToggleButton>\n\n                    </ButtonGroup>\n\n                    {searchBar}\n\n                </div>\n\n                <CardColumns>{this.recipeList()}</CardColumns>\n            </div>\n        )\n    }\n}\n\n\nexport default SearchComponent"]},"metadata":{},"sourceType":"module"}