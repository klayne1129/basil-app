{"ast":null,"code":"import _classCallCheck from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Formik,Form,Field,ErrorMessage}from'formik';import RecipeDataService from'../../api/recipes/RecipeDataService.js';import AuthenticationService from'./AuthenticationService.js';//create recipe page\nvar RecipeComponent=/*#__PURE__*/function(_Component){_inherits(RecipeComponent,_Component);function RecipeComponent(props){var _this;_classCallCheck(this,RecipeComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(RecipeComponent).call(this,props));_this.state={id:_this.props.match.params.id,title:'',directions:'',ingredients:'',notes:'',mealType:'selectOne',image:'',tags:'',prepTime:'',cookTime:'',servings:'',webLink:''};_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.validate=_this.validate.bind(_assertThisInitialized(_this));return _this;}//call api's in this function\n//Get specific recipe using usernamme and Id\n//then update the object\n_createClass(RecipeComponent,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.state.id===-1){return;}var username=AuthenticationService.getLoggedInUser();RecipeDataService.retrieveRecipe(username,this.state.id).then(function(response){return _this2.setState({title:response.data.title,directions:response.data.directions,ingredients:response.data.ingredients,notes:response.data.notes,mealType:response.data.mealType,image:response.data.image,tags:response.data.tags,prepTime:response.data.prepTime,cookTime:response.data.cookTime,servings:response.data.servings,webLink:response.data.webLink});});}// if no value present 'enter blank'\n// custom error message using errorMessage props\n//errororMessage below unde render()\n},{key:\"validate\",value:function validate(values){var errors={};if(!values.title){errors.title='Enter title';}else if(values.title.length<2){errors.title='Title must be at least 2 characters in length';}if(!values.directions){errors.directions='Enter directions';}else if(values.directions.length<5){errors.directions='Directions must be at least 5 characters in length';}if(!values.ingredients){errors.ingredients='Enter ingredients';}else if(values.ingredients.length<2){errors.ingredients='Ingredients must be at least 2 characters in length';}if(values.mealType===\"selectOne\"){errors.mealType='Select a meal type';}return errors;}},{key:\"onSubmit\",value:function onSubmit(values){var _this3=this;var username=AuthenticationService.getLoggedInUser();var recipe={id:this.state.id,title:values.title,directions:values.directions,ingredients:values.ingredients,notes:values.notes,mealType:values.mealType,image:values.image,tags:values.tags,prepTime:values.prepTime,cookTime:values.cookTime,servings:values.servings,webLink:values.webLink};if(this.state.id===-1){RecipeDataService.createRecipe(username,recipe).then(function(){return _this3.props.history.push(\"/recipes\");});}else{RecipeDataService.updateRecipe(username,this.state.id,recipe).then(function(){return _this3.props.history.push(\"/recipes\");});}}},{key:\"render\",value:function render(){//destructuring \nvar _this$state=this.state,title=_this$state.title,directions=_this$state.directions,ingredients=_this$state.ingredients,notes=_this$state.notes,mealType=_this$state.mealType,image=_this$state.image,tags=_this$state.tags,prepTime=_this$state.prepTime,cookTime=_this$state.cookTime,servings=_this$state.servings,webLink=_this$state.webLink;return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"My Recipe\"),React.createElement(\"div\",{className:\"container\"},React.createElement(Formik// usually you would need to list initial values as key value pairs\n// but if the key is the same as the value you only have to \n// list the value (name, directions, ingredients)\n,{initialValues:{title:title,directions:directions,ingredients:ingredients,notes:notes,mealType:mealType,image:image,tags:tags,prepTime:prepTime,cookTime:cookTime,servings:servings,webLink:webLink}//sends ErrorMessages when validation fails only whens button clicked\n//form only submited if validation passed \n//enable reinitialization on formic or it will\n//not update initial values, default is false\n,onSubmit:this.onSubmit,validateOnChange:false,validateonBlur:false,validate:this.validate,enableReinitialize:true},function(props){return React.createElement(Form,null,React.createElement(ErrorMessage,{name:\"title\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(ErrorMessage,{name:\"directions\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(ErrorMessage,{name:\"ingredients\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(ErrorMessage,{name:\"mealType\",component:\"div\",className:\"alert alert-warning\"}),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Title\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"title\",placeholder:\"Mama Freddie's Spaghetti\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Serving Size (Optional)\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"servings\",placeholder:\"8 servings\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Prep Time (Optional)\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"prepTime\",placeholder:\"5 mins\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Cook Time (Optional)\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"cookTime\",placeholder:\"20 mins\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Ingredients\"),React.createElement(Field,{as:\"textarea\",className:\"form-control\",type:\"text\",name:\"ingredients\",id:\"textBox\",placeholder:\"pasta sauce\\nspaghetti noodles\\n\"}),React.createElement(\"p\",null,\"Please press enter after each ingredient except the last one. Each ingredient should be on it's own line.\")),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Directions\"),React.createElement(Field,{as:\"textarea\",className:\"form-control\",type:\"text\",name:\"directions\",id:\"textBox\",placeholder:\"First boil water\\nPlace dry spaghetti noodles into boiling water\\n\"}),React.createElement(\"p\",null,\"Please press enter after each step except the last step. Each step should be on it's own line.\")),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Notes (Optional)\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"notes\",id:\"textBox\",placeholder:\"Can freeze for meal prep.\"})),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Meal Type\"),React.createElement(Field,{as:\"select\",name:\"mealType\"},React.createElement(\"option\",{selected:true,value:\"selectOne\"},\"Select One\"),React.createElement(\"option\",{value:\"entree\"},\"Entree\"),React.createElement(\"option\",{value:\"drink\"},\"Drink\"),React.createElement(\"option\",{value:\"snack\"},\"Snack\"),React.createElement(\"option\",{value:\"dessert\"},\"Dessert\"),React.createElement(\"option\",{value:\"side\"},\"Side\"),React.createElement(\"option\",{value:\"app\"},\"Appetizer\"))),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Tags (Optional)\"),React.createElement(Field,{className:\"form-control\",type:\"text\",name:\"tags\",placeholder:\"easy,itallian,pasta\"}),React.createElement(\"p\",null,\"Please seperate each tag with a comma.\")),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Image URL (Optional)\"),React.createElement(Field,{type:\"text\",className:\"form-control\",name:\"image\",placeholder:\"https://www.spendwithpennies.com/wp-content/uploads/2019/03/Spaghetti-and-Meatballs-SpendWithPennies-4.jpg\"}),React.createElement(\"p\",null,\"If you see an image online you would like to use, right click image and hit \\\"open image in new tab\\\". Copy the url in your browser and paste it here.\")),React.createElement(\"fieldset\",{className:\"form-group\"},React.createElement(\"label\",null,\"Website URL (Optional)\"),React.createElement(Field,{type:\"text\",className:\"form-control\",name:\"webLink\",placeholder:\"www.Freddie'sAwesomeSpaghetti.com\"}),React.createElement(\"p\",null,\"Copy the desired website's url and paste it here.\")),React.createElement(\"button\",{type:\"submit\",className:\"btn btn-success\"},\"Save\"));})));}}]);return RecipeComponent;}(Component);export default RecipeComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basilClone/basil-app/frontend/src/components/recipes/RecipeComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","RecipeDataService","AuthenticationService","RecipeComponent","props","state","id","match","params","title","directions","ingredients","notes","mealType","image","tags","prepTime","cookTime","servings","webLink","onSubmit","bind","validate","username","getLoggedInUser","retrieveRecipe","then","response","setState","data","values","errors","length","recipe","createRecipe","history","push","updateRecipe"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport RecipeDataService from '../../api/recipes/RecipeDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\n\n//create recipe page\n\nclass RecipeComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            title: '',\n            directions: '',\n            ingredients: '',\n            notes: '',\n            mealType: 'selectOne',\n            image: '',\n            tags: '',\n            prepTime: '',\n            cookTime: '',\n            servings: '',\n            webLink: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n\n    }\n    //call api's in this function\n    //Get specific recipe using usernamme and Id\n    //then update the object\n    componentDidMount() {\n\n        if (this.state.id === -1) {\n            return\n        }\n\n        let username = AuthenticationService.getLoggedInUser()\n\n        RecipeDataService.retrieveRecipe(username, this.state.id)\n            .then(response => this.setState({\n                title: response.data.title,\n                directions: response.data.directions,\n                ingredients: response.data.ingredients,\n                notes: response.data.notes,\n                mealType: response.data.mealType,\n                image: response.data.image,\n                tags: response.data.tags,\n                prepTime: response.data.prepTime,\n                cookTime: response.data.cookTime,\n                servings: response.data.servings,\n                webLink: response.data.webLink\n            }))\n    }\n\n\n\n    // if no value present 'enter blank'\n    // custom error message using errorMessage props\n    //errororMessage below unde render()\n\n    validate(values) {\n        let errors = {}\n        if (!values.title) {\n            errors.title = 'Enter title'\n        } else if (values.title.length < 2) {\n            errors.title = 'Title must be at least 2 characters in length'\n        }\n\n        if (!values.directions) {\n            errors.directions = 'Enter directions'\n        } else if (values.directions.length < 5) {\n            errors.directions = 'Directions must be at least 5 characters in length'\n        }\n\n        if (!values.ingredients) {\n            errors.ingredients = 'Enter ingredients'\n        } else if (values.ingredients.length < 2) {\n            errors.ingredients = 'Ingredients must be at least 2 characters in length'\n        }\n\n        if (values.mealType === \"selectOne\") {\n            errors.mealType = 'Select a meal type'\n        }\n\n        return errors\n    }\n\n    onSubmit(values) {\n\n        let username = AuthenticationService.getLoggedInUser()\n\n        let recipe = {\n            id: this.state.id,\n            title: values.title,\n            directions: values.directions,\n            ingredients: values.ingredients,\n            notes: values.notes,\n            mealType: values.mealType,\n            image: values.image,\n            tags: values.tags,\n            prepTime: values.prepTime,\n            cookTime: values.cookTime,\n            servings: values.servings,\n            webLink: values.webLink\n        }\n\n        if (this.state.id === -1) {\n            RecipeDataService.createRecipe(username, recipe)\n                .then(() => this.props.history.push(`/recipes`))\n\n        } else {\n            RecipeDataService.updateRecipe(username, this.state.id, recipe)\n                .then(() => this.props.history.push(`/recipes`))\n        }\n\n    }\n\n    render() {\n        //destructuring \n        let { title, directions, ingredients, notes, mealType, image, tags, prepTime, cookTime, servings, webLink } = this.state\n\n        return (\n\n            <div>\n                <h1>My Recipe</h1>\n                <div className='container'>\n\n                    {/* defining a method that accepts props as input \n                        and returns the html of the form */}\n                    <Formik\n\n                        // usually you would need to list initial values as key value pairs\n                        // but if the key is the same as the value you only have to \n                        // list the value (name, directions, ingredients)\n                        initialValues={{ title, directions, ingredients, notes, mealType, image, tags, prepTime, cookTime, servings, webLink }}\n\n                        //sends ErrorMessages when validation fails only whens button clicked\n                        //form only submited if validation passed \n                        //enable reinitialization on formic or it will\n                        //not update initial values, default is false\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateonBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n\n                                    <ErrorMessage name='title' component='div' className='alert alert-warning' />\n                                    <ErrorMessage name='directions' component='div' className='alert alert-warning' />\n                                    <ErrorMessage name='ingredients' component='div' className='alert alert-warning' />\n                                    <ErrorMessage name='mealType' component='div' className='alert alert-warning' />\n\n                                    <fieldset className='form-group'>\n                                        <label>Title</label>\n                                        <Field className='form-control' type='text' name='title'  placeholder=\"Mama Freddie's Spaghetti\"/>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Serving Size (Optional)</label>\n                                        <Field className='form-control' type='text' name='servings'  placeholder='8 servings'/>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Prep Time (Optional)</label>\n                                        <Field className='form-control' type='text' name='prepTime'  placeholder='5 mins'/>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Cook Time (Optional)</label>\n                                        <Field className='form-control' type='text' name='cookTime' placeholder='20 mins'/>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Ingredients</label>\n                                        <Field as='textarea' className='form-control' type='text' name='ingredients' id='textBox' placeholder='pasta sauce&#10;spaghetti noodles&#10;'/>\n                                        <p>Please press enter after each ingredient except the last one. Each ingredient should be on it's own line.</p>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Directions</label>\n                                        <Field as='textarea' className='form-control' type='text' name='directions' id='textBox' placeholder='First boil water&#10;Place dry spaghetti noodles into boiling water&#10;' />\n                                        <p>Please press enter after each step except the last step. Each step should be on it's own line.</p>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Notes (Optional)</label>\n                                        <Field className='form-control' type='text' name='notes' id='textBox' placeholder='Can freeze for meal prep.' />\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Meal Type</label>\n                                        <Field as='select' name='mealType'>\n                                            <option selected value='selectOne'>Select One</option>\n                                            <option value='entree'>Entree</option>\n                                            <option value='drink'>Drink</option>\n                                            <option value='snack'>Snack</option>\n                                            <option value='dessert'>Dessert</option>\n                                            <option value='side'>Side</option>\n                                            <option value='app'>Appetizer</option>\n                                        </Field>\n                                    </fieldset>\n\n                                    <fieldset className='form-group'>\n                                        <label>Tags (Optional)</label>\n                                        <Field className='form-control' type='text' name='tags' placeholder='easy,itallian,pasta'/>\n                                        <p>Please seperate each tag with a comma.</p>\n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\">\n                                        <label>Image URL (Optional)</label>\n                                        <Field type=\"text\" className=\"form-control\" name='image' placeholder=\"https://www.spendwithpennies.com/wp-content/uploads/2019/03/Spaghetti-and-Meatballs-SpendWithPennies-4.jpg\"/>\n                                        <p>If you see an image online you would like to use, right click image and hit \"open image in new tab\". Copy the url in your browser and paste it here.</p>\n                                    </fieldset>\n\n                                    <fieldset className=\"form-group\">\n                                        <label>Website URL (Optional)</label>\n                                        <Field type=\"text\" className=\"form-control\" name='webLink' placeholder=\"www.Freddie'sAwesomeSpaghetti.com\"/>\n                                        <p>Copy the desired website's url and paste it here.</p>\n                                    </fieldset>\n\n                                    <button type=\"submit\" className='btn btn-success'>Save</button>\n\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default RecipeComponent\n\n"]},"metadata":{},"sourceType":"module"}