{"ast":null,"code":"import _defineProperty from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/KatieLayne/Documents/basilClone/basil-app/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import AuthenticationService from'./AuthenticationService.js';var LoginComponent=/*#__PURE__*/function(_Component){_inherits(LoginComponent,_Component);function LoginComponent(props){var _this;_classCallCheck(this,LoginComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(LoginComponent).call(this,props));// added state to component\n_this.handleKeyPress=function(e){if(e.key===\"Enter\"){AuthenticationService.executeJWTAuthenticationService(_this.state.username,_this.state.password).then(function(response){AuthenticationService.registerSuccessfulLoginForJwt(_this.state.username,response.data.token);_this.props.history.push(\"/welcome/\".concat(_this.state.username));}).catch(function(){_this.setState({showSuccessMessage:false});_this.setState({hasLoginFailed:true});});}};_this.state={username:'',password:'',hasLoginFailed:false,showSuccessMessage:false};//bind methods\n_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.loginClicked=_this.loginClicked.bind(_assertThisInitialized(_this));_this.handleKeyPress=_this.handleKeyPress.bind(_assertThisInitialized(_this));return _this;}//whenever there is a change in a text element an event will handle it\n//event updates the state \n_createClass(LoginComponent,[{key:\"handleChange\",value:function handleChange(event){this.setState(_defineProperty({},event.target.name,event.target.value));}//Call the JWTAuthenticationService, if succesful response comes back,\n//register a token for the intercepter so token will be used on,\n//every subsequent request\n},{key:\"loginClicked\",value:function loginClicked(){var _this2=this;AuthenticationService.executeJWTAuthenticationService(this.state.username,this.state.password).then(function(response){AuthenticationService.registerSuccessfulLoginForJwt(_this2.state.username,response.data.token);_this2.props.history.push(\"/welcome/\".concat(_this2.state.username));}).catch(function(){_this2.setState({showSuccessMessage:false});_this2.setState({hasLoginFailed:true});});}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Login\"),React.createElement(\"div\",{className:\"container\"},this.state.hasLoginFailed&&React.createElement(\"div\",{className:\"alert alert-warning\"},\"Invalid Credentials\"),this.state.showSuccessMessage&&React.createElement(\"div\",null,\"Login Successful\"),\"Username: \",React.createElement(\"input\",{type:\"text\",name:\"username\",placeholder:\"current username\",value:this.state.username,onChange:this.handleChange}),\"Password: \",React.createElement(\"input\",{type:\"password\",name:\"password\",placeholder:\"current password\",value:this.state.password,onChange:this.handleChange,onKeyPress:this.handleKeyPress}),React.createElement(\"button\",{type:\"submit\",className:\"btn btn-success\",onClick:this.loginClicked},\"Login\")));}}]);return LoginComponent;}(Component);export default LoginComponent;","map":{"version":3,"sources":["/Users/KatieLayne/Documents/basilClone/basil-app/frontend/src/components/recipes/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","props","handleKeyPress","e","key","executeJWTAuthenticationService","state","username","password","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","setState","showSuccessMessage","hasLoginFailed","handleChange","bind","loginClicked","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        // added state to component\n        this.state = {\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n\n        }\n        //bind methods\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n        this.handleKeyPress = this.handleKeyPress.bind(this)\n\n    }\n    //whenever there is a change in a text element an event will handle it\n    //event updates the state \n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                    : event.target.value\n            }\n        )\n    }\n\n    //Call the JWTAuthenticationService, if succesful response comes back,\n    //register a token for the intercepter so token will be used on,\n    //every subsequent request\n    loginClicked() {\n        AuthenticationService\n            .executeJWTAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                this.props.history.push(`/welcome/${this.state.username}`)\n            }).catch(() => {\n                this.setState({ showSuccessMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n    }\n\n\n    handleKeyPress = e => {\n        if (e.key === \"Enter\") {\n            AuthenticationService\n                .executeJWTAuthenticationService(this.state.username, this.state.password)\n                .then((response) => {\n                    AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                    this.props.history.push(`/welcome/${this.state.username}`)\n                }).catch(() => {\n                    this.setState({ showSuccessMessage: false })\n                    this.setState({ hasLoginFailed: true })\n                })\n        }\n    }\n\n    render() {\n        return (\n\n\n            <div >\n                <h1>Login</h1>\n                \n                <div className=\"container\">\n\n                    {/* give userfeedback based on credentials */}\n                    {/* if true show message */}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccessMessage && <div>Login Successful</div>}\n                    \n                    Username: <input type=\"text\" name=\"username\" placeholder='current username' value={this.state.username} onChange={this.handleChange} />\n\n                    Password: <input type=\"password\" name=\"password\" placeholder='current password' value={this.state.password} onChange={this.handleChange} onKeyPress={this.handleKeyPress} />\n\n                    <button type='submit' className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}